name: Validate PR

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  validate-commits:
    name: Validate Commit Messages
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate conventional commits
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: '.commitlintrc.json'

  validate-pr-title:
    name: Validate PR Title
    runs-on: ubuntu-latest
    
    steps:
      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
          requireScope: false
          disallowScopes: |
            release
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.

  check-version-bump:
    name: Check Version Bump Needed
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check if version bump needed
        continue-on-error: true
        run: |
          npm run version:check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = `## ðŸ”„ Version Bump Preview
            
            This PR will trigger an automated release when merged to main.
            
            **Release Type:** Based on conventional commits in this PR
            - \`feat:\` = minor version bump (0.1.0 â†’ 0.2.0)
            - \`fix:\` = patch version bump (0.1.0 â†’ 0.1.1)  
            - \`BREAKING CHANGE:\` = major version bump (0.1.0 â†’ 1.0.0)
            
            The release will be automatically published to NPM and GitHub releases with downloadable binaries.`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });